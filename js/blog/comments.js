"use strict";var type,username,repo,clientID,clientSecret,commentsNo,commentsGoTo,commentsBtnClass,commentsTarget,commentsRecentTarget,commentsLoadingTarget,githubAddr="https://github.com/",githubApiAddr="https://api.github.com/repos/",oschinaAddr="http://git.oschina.net/",oschinaApiAddr="http://git.oschina.net/api/v5/repos/",spinOpts={lines:13,length:10,width:6,radius:12,corners:1,rotate:0,direction:1,color:"#5882FA",speed:1,trail:60,shadow:!1,hwaccel:!1,className:"spinner",zIndex:2e9,top:"auto",left:"50%"},_getComment=function t(n,s){var c=void 0,i=void 0,c=n.comments,e=n.commentsUrl,i=n.page;$.ajax({url:e+"?page="+i,dataType:"json",cache:!1,crossDomain:!0,data:clientID&&clientSecret?"client_id="+clientID+"&client_secret="+clientSecret:"",success:function(e){!e||e.length<=0?(s&&"function"==typeof s&&s(c),s=null):(e.forEach(function(e){c.push(e)}),i+=1,n.comments=c,n.page=i,t(n,s))},error:function(e){s&&"function"==typeof s&&s(c),s=null}})},_getCommentsUrl=function t(n,s){var c=void 0,i=!1,o=n.commentsIssueTitle,c=n.page,e="github"==type?githubApiAddr:oschinaApiAddr;$.ajax({url:e+username+"/"+repo+"/issues?page="+c,dataType:"json",cache:!1,crossDomain:!0,data:clientID&&clientSecret?"client_id="+clientID+"&client_secret="+clientSecret:"",success:function(e){!e||e.length<=0?(s&&"function"==typeof s&&s("",""),s=null):(e.forEach(function(e){e.title&&e.title==o&&(s&&"function"==typeof s&&s(e.comments_url,e),i=!0,s=null)}),i||(c+=1,n.page=c,t(n,s)))},error:function(){s&&"function"==typeof s&&s("",""),s=null}})},_getIssue=function(e,t){_getIssueByUrl(("github"==type?githubApiAddr:oschinaApiAddr)+username+"/"+repo+"/issues/"+e,function(e){t&&"function"==typeof t&&t(e),t=null})},_getIssueByUrl=function(e,t){$.ajax({url:e,dataType:"json",cache:!1,crossDomain:!0,data:clientID&&clientSecret?"client_id="+clientID+"&client_secret="+clientSecret:"",success:function(e){t=(!e||e.length<=0?t&&"function"==typeof t&&t():t&&"function"==typeof t&&t(e),null)},error:function(){t&&"function"==typeof t&&t(),t=null}})},_renderComment=function(e){var t=timeago(),n=e.user,s=marked(e.body),t=t.format(e.created_at),c=n.login==username?"current-user":"",i="github"==type?githubAddr:oschinaAddr,o=n.login==username?'\n        <span class="timeline-comment-label text-bold tooltipped tooltipped-multiline tooltipped-s" aria-label="'+username+' is the author of this blog.">\n        Owner\n    </span>\n        ':"";return'\n        <div class="timeline-comment-wrapper js-comment-container">\n        <div class="avatar-parent-child timeline-comment-avatar">\n        <a href="'+i+n.login+'">\n        <img alt="@'+n.login+'" class="avatar rounded-1" height="44" src="'+n.avatar_url+'&amp;s=88" width="44">\n        </a>\n        </div>\n        <div id="issuecomment-310820108" class="comment previewable-edit js-comment js-task-list-container  timeline-comment js-reorderable-task-lists reorderable-task-lists '+c+'" data-body-version="0ff4a390ed2be378bf5044aa6dc1510b">\n\n        <div class="timeline-comment-header">\n        '+o+'\n        <h3 class="timeline-comment-header-text f5 text-normal">\n\n        <strong>\n        <a href="'+i+n.login+'" class="author">'+n.login+'</a>\n        \n    </strong>\n\n    commented  \n\n        <a href="#issuecomment-'+e.id+'" class="timestamp"><relative-time datetime="'+e.created_at+'" title="'+e.created_at+'">'+t+'</relative-time></a>\n\n    </h3>\n        </div>\n        \n        <table class="d-block">\n        <tbody class="d-block">\n        <tr class="d-block">\n        <td class="d-block comment-body markdown-body js-comment-body">\n        '+s+"\n    </td>\n        </tr>\n        </tbody>\n        </table>\n        </div>\n        </div>\n        "},_renderRecentComment=function(e,t,n,s,c,i){var o="github"==type?githubAddr:oschinaAddr,o='\n        <div class="comment-item">\n          <div class="row comment-widget-head">\n            <div class="xl-col-3 comment-widget-avatar">\n              <a href="'+o+e.login+'">\n                <img alt="@'+e.login+'" class="avatar rounded-1" height="44" src="'+e.avatar_url+'&amp;s=88" width="44">\n              </a>\n            </div>\n            <div class="comment-widget-body">\n              <span><a class="comment-widget-user" href="'+o+e.login+'" target="_blank">'+e.login+'</a> </span>\n              <div class="comment-widget-content">'+n+'</div>\n            </div>\n          </div>\n          <br/>\n          <div class="comment-widget-meta">\n            <span class="comment-widget-title">'+t+'</span> | <span class="comment-widget-date">'+s+"</span>\n          </div>\n        </div>\n        ";i&&"function"==typeof i&&i(o)},_getRecentCommentList=function t(n,s,c,i,o,a){var e,r,m,l,d,u;i<=c||s>=o.length?(a&&"function"==typeof a&&a(n),a=null):(e=o[s])&&(r=marked(e.body),m=e.title,l=e.user,d=timeago().format(e.created_at),u=e.html_url,r&&""!=r?m?_renderRecentComment(l,m,r,d,u,function(e){t(n+=e,++s,++c,i,o,a)}):_getIssueByUrl(e.issue_url,function(e){_renderRecentComment(l,e.title,r,d,u,function(e){t(n+=e,++s,++c,i,o,a)})}):(t(n,++s,c,i,o,a),a=null))},_renderRecentCommentList=function(e,t){_getRecentCommentList("",0,0,t,e,function(e){$(commentsRecentTarget).append(e)})},_renderHTML=function(e){var t,n=void 0,s=void 0,c=e.issue,n=e.comments,s=e.commentsUrl,e=e.commentsIssueTitle,i="github"==type?githubAddr:oschinaAddr,o="github"==type?githubApiAddr:oschinaApiAddr,a='\n        <div class="discussion-item discussion-item-labeled">\n        <h3 class="discussion-item-header f5 text-normal" id="event-1157063333">\n\n        <span class="discussion-item-icon">\n        <svg aria-hidden="true" class="octicon octicon-tag" height="16" version="1.1" viewBox="0 0 16 16" width="14"><path fill-rule="evenodd" d="M15 1H6c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1v3l3-3h4c.55 0 1-.45 1-1V9h1l3 3V9h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM9 11H4.5L3 12.5V11H1V5h4v3c0 .55.45 1 1 1h3v2zm6-3h-2v1.5L11.5 8H6V2h9v6z"></path></svg>\n        </span>\n        The above comments are provided by \n        <a href="http://github.com/wzpan/comment.js" class="discussion-item-entity" target="_blank">comment.js</a> with the help of '+("oschina"==type?"<a href='http://oschina.net' class='discussion-item-entity' target='_blank'>OSChina issue</a>":"<a href='http://github.com' class='discussion-item-entity' target='_blank'>Github issue</a>")+".\n        </h3>\n        </div>\n        ",n=(c&&c.body&&""!=c.body||n&&!(n.length<=0)?(t='\n            <div class="discussion-timeline js-quote-selection-container">\n            <div class="js-discussion js-socket-channel">\n            ',c&&c.body&&""!=c.body&&(t+=_renderComment(c)),n.forEach(function(e){t+=_renderComment(e)}),t=t+a+"</div></div>",$(commentsTarget).append(t)):(c="\n            <div class='js-discussion no-comment'>\n            <span>"+commentsNo+"</span>\n            </div>\n            ",$(commentsTarget).append(c)),'\n        <p class="goto-comment">\n        <a href="'+(s?s.replace(o,i).replace(/(.*)comments/,"$1")+"#new_comment_field":i+"/"+username+"/"+repo+"/issues/new?title="+e+"#issue_body")+'" class="'+commentsBtnClass+'" target="_blank">'+commentsGoTo+"</a>\n        </p>\n        ");$(commentsTarget).append(n)},CompareDate=function(e,t){e=e.created_at.replace("T"," ").replace("Z","").replace(/-/g,"/"),t=t.created_at.replace("T"," ").replace("Z","").replace(/-/g,"/"),e=new Date(e);return new Date(t)-e},_getRecentIssues=function(e,t){var n=e.count,e="github"==type?githubApiAddr:oschinaApiAddr;$.ajax({url:e+username+"/"+repo+"/issues?per_page=100&sort=created&direction=desc",dataType:"json",cache:!1,crossDomain:!0,data:clientID&&clientSecret?"client_id="+clientID+"&client_secret="+clientSecret:"",success:function(e){e.length>n&&(e=e.sort(CompareDate).slice(0,5)),t&&"function"==typeof t&&t(e),t=null},error:function(e){t&&"function"==typeof t&&t(),t=null}})},_getRecentComments=function(e,t){var n=e.count,e="github"==type?githubApiAddr:oschinaApiAddr;$.ajax({url:e+username+"/"+repo+"/issues/comments?per_page=100&sort=created&direction=desc",dataType:"json",cache:!1,crossDomain:!0,data:clientID&&clientSecret?"client_id="+clientID+"&client_secret="+clientSecret:"",success:function(e){e.length>n&&(e=e.sort(CompareDate).slice(0,5)),t&&"function"==typeof t&&t(e),t=null},error:function(e){t&&"function"==typeof t&&t(),t=null}})},getRecentCommentsList=function(t){type=t.type,e=t.user,repo=t.repo,clientID=t.clientID,clientSecret=t.clientSecret,n=t.count,commentsRecentTarget=t.commentsRecentTarget,username=e,commentsRecentTarget=commentsRecentTarget||"#comments-recent";var n,e,s=new Array;_getRecentIssues(t,function(e){s=s.concat(e),_getRecentComments(t,function(e){s=(s=s.concat(e)).sort(CompareDate),_renderRecentCommentList(s,n)})})},getComments=function(e){type=e.type,n=e.user,repo=e.repo,clientID=e.clientID,clientSecret=e.clientSecret,commentsNo=e.commentsNo,commentsGoTo=e.commentsGoTo,s=e.commentsIssueTitle,t=e.commentsIssueID,commentsBtnClass=e.commentsBtnClass,commentsTarget=e.commentsTarget,commentsLoadingTarget=e.commentsLoadingTarget,commentsTarget=commentsTarget||"#comments-thread",username=n,commentsLoadingTarget&&(c=new Spinner(spinOpts));var s,t,n,c,i,o=new Array;type=type||"github",commentsBtnClass=commentsBtnClass||"btn",commentsLoadingTarget&&c.spin($("div"+commentsLoadingTarget).get(0)),t&&"undefined"!=t&&void 0!==t?(i=("github"==type?githubApiAddr:oschinaApiAddr)+username+"/"+repo+"/issues/"+t+"/comments",_getIssue(t,function(t){_getComment({comments:o,commentsUrl:i,page:1},function(e){commentsLoadingTarget&&c.spin(),_renderHTML({issue:t,comments:e,commentsUrl:i,commentsIssueTitle:s}),commentsLoadingTarget&&c.spin()})})):_getCommentsUrl({commentsIssueTitle:s,page:1},function(t,n){""!=t&&null!=t?_getComment({comments:o,commentsUrl:t,page:1},function(e){commentsLoadingTarget&&c.spin(),_renderHTML({issue:n,comments:e,commentsUrl:t,commentsIssueTitle:s})}):(commentsLoadingTarget&&c.spin(),_renderHTML({issue:n,comments:o,commentsUrl:t,commentsIssueTitle:s}))})};